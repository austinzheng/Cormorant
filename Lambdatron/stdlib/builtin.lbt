; Lambdatron standard library
; builtin.lbt

(def list .list)
(def vector .vector)
(def hash-map .hashmap)
(def cons .cons)
(def first .first)
(def rest .rest)
(def next .next)
(def concat .concat)
(def nth .nth)
(def seq .seq)
(def get .get)
(def assoc .assoc)
(def dissoc .dissoc)
(def reduce .reduce)

(def symbol .symbol)
(def keyword .keyword)
(def int .int)
(def double .double)

(def re-pattern .re-pattern)
(def re-first .re-first)
(def re-seq .re-seq)
(def re-iterate .re-iterate)

(def read .read)
(def read-string .read-string)
(def print .print)
(def println .println)

(def rem .rem)
(def quot .quot)

(def nil? .nil?)
(def number? .number?)
(def int? .int?)
(def string? .string?)
(def char? .char?)
(def symbol? .symbol?)
(def keyword? .keyword?)
(def fn? .fn?)
(def eval? .eval?)
(def true? .true?)
(def false? .false?)
(def list? .list?)
(def vector? .vector?)
(def map? .map?)
(def seq? .seq?)
(def pos? .pos?)
(def neg? .neg?)
(def zero? .zero?)
(def subnormal? .subnormal?)
(def infinite? .infinite?)
(def nan? .nan?)

(def eval .eval)
(def fail .fail)
